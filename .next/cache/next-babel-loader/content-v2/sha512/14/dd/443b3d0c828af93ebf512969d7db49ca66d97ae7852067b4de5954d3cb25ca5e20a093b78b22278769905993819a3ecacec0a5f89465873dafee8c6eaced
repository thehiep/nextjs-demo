{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mb050/Desktop/reactjs-tutorial/lesson-325/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: \"first meetup\",\n    address: \"address\",\n    image: \"\",\n    description: \"first meetup\",\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://admin:5aBXuL1ff2Kuefah@cluster0.cr4kk.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params;\n  return {\n    props: {\n      meetupData: {\n        title: 'first meetup',\n        address: 'address',\n        image: '',\n        description: 'first meetup',\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg'\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/mb050/Desktop/reactjs-tutorial/lesson-325/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetails","getStaticPaths","client","MongoClient","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","props","meetupData","title","address","image","description"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,sBAAO,QAAC,YAAD;AACH,IAAA,KAAK,EAAC,cADH;AAEH,IAAA,OAAO,EAAC,SAFL;AAGH,IAAA,KAAK,EAAC,EAHH;AAIH,IAAA,WAAW,EAAC,cAJT;AAKH,IAAA,KAAK,EAAC;AALH;AAAA;AAAA;AAAA;AAAA,UAAP;AAOH,CARD;;AAUA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMC,WAAW,CAACC,OAAZ,CAAoB,6GAApB,CAArB;AACA,QAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAACL,OAAO,CAACM,GAAR,CAAYC,MAAM,KAAI;AACxBC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AADN;AADgB,KAAJ,CAAlB;AAFH,GAAP;AASH;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAE1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAzB;AACA,SAAO;AACHK,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,KAAK,EAAE,cADC;AAERC,QAAAA,OAAO,EAAE,SAFD;AAGRC,QAAAA,KAAK,EAAE,EAHC;AAIRC,QAAAA,WAAW,EAAE,cAJL;AAKRD,QAAAA,KAAK,EAAE;AALC;AADT;AADJ,GAAP;AAWH;AACD,eAAezB,aAAf","sourcesContent":["import { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = () => {\n    return <MeetupDetail\n        title='first meetup'\n        address='address'\n        image=''\n        description='first meetup'\n        image='https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg'\n    />\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb+srv://admin:5aBXuL1ff2Kuefah@cluster0.cr4kk.mongodb.net/myFirstDatabase?retryWrites=true&w=majority')\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n    return {\n        fallback: false,\n        paths:meetups.map(meetup=> ({\n            params: {\n                meetupId: meetup._id.toString()\n            }\n        })) \n    }\n\n}\nexport async function getStaticProps(context) {\n\n    const meetupId = context.params;\n    return {\n        props: {\n            meetupData: {\n                title: 'first meetup',\n                address: 'address',\n                image: '',\n                description: 'first meetup',\n                image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg'\n            }\n        }\n    }\n}\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}