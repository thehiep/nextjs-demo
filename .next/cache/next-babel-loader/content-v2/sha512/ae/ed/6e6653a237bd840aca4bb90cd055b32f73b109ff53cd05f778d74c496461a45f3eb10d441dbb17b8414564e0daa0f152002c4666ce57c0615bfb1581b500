{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mb050/Desktop/reactjs-tutorial/lesson-325/pages/[meetupId]/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { useRouter } from \"next/router\";\nimport Head from 'next/head';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  _s();\n\n  useRouter();\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      image: props.meetupData.image,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(MeetupDetails, \"CeygcqajjFExIxFEzW4x/gfWEGQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/mb050/Desktop/reactjs-tutorial/lesson-325/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","useRouter","Head","MeetupDetails","props","meetupData","title","description","address","image"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA;;AAC7BH,EAAAA,SAAS;AACT,sBAAO,QAAC,QAAD;AAAA,4BACH,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQG,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADG,eAMH,QAAC,YAAD;AACI,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBG,OAF9B;AAGI,MAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBI,KAH5B;AAII,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJlC;AAAA;AAAA;AAAA;AAAA,aANG;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAaH,CAfD;;GAAMJ,a;UACFF,S;;;KADEE,a;;AAwDN,eAAeA,aAAf","sourcesContent":["import { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { useRouter } from \"next/router\";\nimport Head from 'next/head';\n\nconst MeetupDetails = (props) => {\n    useRouter();\n    return <Fragment>\n        <Head>\n            <title>{props.meetupData.title}</title>\n            <meta name='description' content={props.meetupData.description} />\n        </Head>\n\n        <MeetupDetail\n            title={props.meetupData.title}\n            address={props.meetupData.address}\n            image={props.meetupData.image}\n            description={props.meetupData.description}\n        />\n    </Fragment>\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb+srv://admin:5aBXuL1ff2Kuefah@cluster0.cr4kk.mongodb.net/myFirstDatabase?retryWrites=true&w=majority')\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n    client.close();\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({\n            params: {\n                meetupId: meetup._id.toString()\n            }\n        }))\n    }\n\n}\nexport async function getStaticProps(context) {\n\n    const meetupId = context.params.meetupId;\n    const client = await MongoClient.connect('mongodb+srv://admin:5aBXuL1ff2Kuefah@cluster0.cr4kk.mongodb.net/myFirstDatabase?retryWrites=true&w=majority')\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n    console.log(meetupId)\n    const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\n    client.close();\n    return {\n        props: {\n            meetupData: {\n                id: meetup._id.toString(),\n                title: meetup.title,\n                address: meetup.address,\n                image: meetup.image,\n                description: meetup.description\n            }\n        }\n    }\n}\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}