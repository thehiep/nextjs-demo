{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mb050/Desktop/reactjs-tutorial/lesson-325/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { useRouter } from \"next/router\";\nimport Head from 'next/head';\n\nconst MeetupDetails = props => {\n  useRouter();\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      image: props.meetupData.image,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://admin:5aBXuL1ff2Kuefah@cluster0.cr4kk.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://admin:5aBXuL1ff2Kuefah@cluster0.cr4kk.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  console.log(meetupId);\n  const meetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/mb050/Desktop/reactjs-tutorial/lesson-325/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MongoClient","ObjectId","useRouter","Head","MeetupDetails","props","meetupData","title","address","image","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","findOne","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7BH,EAAAA,SAAS;AACT,sBAAO,QAAC,QAAD;AAAA,4BACH,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG,eAKH,QAAC,YAAD;AACI,MAAA,KAAK,EAAEG,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE,OAF9B;AAGI,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAH5B;AAII,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA,YALG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAYH,CAdD;;AAgBA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,6GAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADN;AADkB,KAAL,CAAlB;AAFJ,GAAP;AASH;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAE1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,6GAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,QAAMF,MAAM,GAAG,MAAMV,iBAAiB,CAACkB,OAAlB,CAA0B;AAAEd,IAAAA,GAAG,EAAElB,QAAQ,CAAC0B,QAAD;AAAf,GAA1B,CAArB;AACAf,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHhB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACR4B,QAAAA,EAAE,EAAET,MAAM,CAACN,GAAP,CAAWS,QAAX,EADI;AAERrB,QAAAA,KAAK,EAAEkB,MAAM,CAAClB,KAFN;AAGRC,QAAAA,OAAO,EAAEiB,MAAM,CAACjB,OAHR;AAIRC,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAJN;AAKRC,QAAAA,WAAW,EAAEe,MAAM,CAACf;AALZ;AADT;AADJ,GAAP;AAWH;AACD,eAAeN,aAAf","sourcesContent":["import { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { useRouter } from \"next/router\";\nimport Head from 'next/head';\n\nconst MeetupDetails = (props) => {\n    useRouter();\n    return <Fragment>\n        <Head>\n            <title></title>\n        </Head>\n\n        <MeetupDetail\n            title={props.meetupData.title}\n            address={props.meetupData.address}\n            image={props.meetupData.image}\n            description={props.meetupData.description}\n        />\n    </Fragment>\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb+srv://admin:5aBXuL1ff2Kuefah@cluster0.cr4kk.mongodb.net/myFirstDatabase?retryWrites=true&w=majority')\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n    client.close();\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({\n            params: {\n                meetupId: meetup._id.toString()\n            }\n        }))\n    }\n\n}\nexport async function getStaticProps(context) {\n\n    const meetupId = context.params.meetupId;\n    const client = await MongoClient.connect('mongodb+srv://admin:5aBXuL1ff2Kuefah@cluster0.cr4kk.mongodb.net/myFirstDatabase?retryWrites=true&w=majority')\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n    console.log(meetupId)\n    const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\n    client.close();\n    return {\n        props: {\n            meetupData: {\n                id: meetup._id.toString(),\n                title: meetup.title,\n                address: meetup.address,\n                image: meetup.image,\n                description: meetup.description\n            }\n        }\n    }\n}\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}